<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <context:component-scan base-package="com.example" />

    <batch:job id="animeJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="xmlItemReader"
                             writer="cvsFileItemWriter"
                             processor="filterReportProcessor"
                             commit-interval="1">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- Filtering process -->
    <bean id="filterReportProcessor" class="com.example.processor.FilterAnimeProcessor" />

    <bean id="xmlItemReader"
          class="org.springframework.batch.item.xml.StaxEventItemReader">
        <property name="fragmentRootElementName" value="anime"/>
        <property name="resource" value="classpath:xml/anime.xml"/>
        <property name="unmarshaller" ref="animeUnmarshaller"/>
    </bean>

    <!-- Read and map values to object, via jaxb2 -->
    <bean id="animeUnmarshaller"
          class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
    <property name="classesToBeBound">
        <list>
            <value>com.example.model.Anime</value>
        </list>
    </property>
    </bean>

    <bean id="cvsFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <!-- write this to csv file -->
        <property name="resource" value="file:cvs/anime.csv" />
        <property name="shouldDeleteIfExists" value="true" />

        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value="," />
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="animeId, animeTitle, seriesType, episodes, myId,
                        myWatchedEpisodes, myStartDate, myFinishedDate, myRated, myScore, myDvd, myStorage,
                        myStatus, myComments, myTimesWatched, myRewatchValue, myTags, myRewatching, myRewatchingEp,
                        updateOnImport" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="runScheduler" class="com.example.RunScheduler" />

    <!-- Run every 5 seconds -->
    <task:scheduled-tasks>
        <task:scheduled ref="runScheduler" method="run" cron="*/5 * * * * *"/>
    </task:scheduled-tasks>
</beans>